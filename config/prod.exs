use Mix.Config

# For production, we configure the host to read the PORT
# from the system environment. Therefore, you will need
# to set PORT=80 before running your server.
#
# You should also configure the url host to something
# meaningful, we use this information when generating URLs.
#
# Finally, we also include the path to a cache manifest
# containing the digested version of static files. This
# manifest is generated by the mix phoenix.digest task
# # which you typically run after static files are built.
# config :newsly, Newsly.Endpoint,
#   http: [:inet6, port: {:system, "PORT"}],
#   url: [host: "example.com", port: 80],
#   cache_static_manifest: "priv/static/cache_manifest.json"
#
# # Do not print debug messages in production
# config :logger, level: :info


#platypus added

# config :newsly, Newsly.Endpoint,
# http: [port: {:system, "PORT"}, compress: true],
# url: [scheme: "http", host: System.get_env("HOST"), port: {:system, "PORT"}],
# secret_key_base: System.get_env("SECRET_KEY_BASE"),
# code_reloader: false,
# cache_static_manifest: "priv/static/manifest.json",
# server: true
#
# config :newsly, Newsly.Repo,
# adapter: Ecto.Adapters.Postgres,
# database: System.get_env("RDS_DB_NAME"),
# username: System.get_env("RDS_USERNAME"),
# password: System.get_env("RDS_PASSWORD"),
# hostname: System.get_env("RDS_HOSTNAME"),
# port: System.get_env("RDS_PORT") || 5432,
# pool_size: 20,
# ssl: true
#
# config :logger, level: :info










# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :newsly, Newsly.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [:inet6,
#               port: 443,
#               keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#               certfile: System.get_env("SOME_APP_SSL_CERT_PATH")]
#
# Where those two env variables return an absolute path to
# the key and cert in disk or a relative path inside priv,
# for example "priv/ssl/server.key".
#
# We also recommend setting `force_ssl`, ensuring no data is
# ever sent via http, always redirecting to https:
#
#     config :newsly, Newsly.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.

# ## Using releases
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
#     config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :newsly, Newsly.Endpoint, server: true
#

# Finally import the config/prod.secret.exs
# which should be versioned separately.

# Watch static and templates for browser reloading.
# config :newsly, Newsly.Endpoint,
#   live_reload: [
#     patterns: [
#       ~r{priv/static/.*(js|css|png|jpeg|jpg|gif|svg)$},
#       ~r{priv/gettext/.*(po)$},
#       ~r{web/views/.*(ex)$},
#       ~r{web/templates/.*(eex)$}
#     ]
#   ]

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 5



import_config "prod.secret.exs"
